cex.names = 0.7, log = "y",
main = paste("cluster",i, sep = " "))
dev.off()
}
}
SPADE(x,22)
?barplot
?boxplot
SPADE <- function(x,k){
#initial clustering and binning
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
#cleaning data and assigning to data frame
big_data = do.call(cbind, datalist)
big_data = t(big_data)
clus_num <- c(1:k)
clus_names <- as.character(clus_num)
as.data.frame(big_data, row.names = c(clus_names)) -> cluster_means
# as above for phenotype data
for(i in 1:k){
mypath3 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotypes_","cluster_", i, ".png", sep = ""))
png(file = mypath3)
phedat = data.frame(x[c(cut_x == i),])
boxplot.matrix(as.matrix(log10(phedat)), log = "y")
dev.off()
}
#calculating cluster distances and plotting
dist(cluster_means, method = "manhattan") -> distx1
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
minimum.spanning.tree(adjgraph) -> SPADEgraph
mypath2 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("Network_", ".png", sep = ""))
png(file = mypath2)
plot(SPADEgraph)
dev.off()
# Saving Phenotype data as bargraphs per cluster
for(i in 1:k){
mypath <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotype_","cluster_", i, ".png", sep = ""))
png(file = mypath)
barplot(as.matrix(log10(cluster_means[i,])),
cex.names = 0.7, log = "y",
main = paste("cluster",i, sep = " "))
dev.off()
}
}
SPADE(x,22)
SPADE <- function(x,k){
#initial clustering and binning
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
#cleaning data and assigning to data frame
big_data = do.call(cbind, datalist)
big_data = t(big_data)
clus_num <- c(1:k)
clus_names <- as.character(clus_num)
as.data.frame(big_data, row.names = c(clus_names)) -> cluster_means
# as above for phenotype data
for(i in 1:k){
mypath3 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotypes_","cluster_", i, ".png", sep = ""))
png(file = mypath3)
phedat = data.frame(x[c(cut_x == i),])
boxplot.matrix(as.matrix(phedat))
dev.off()
}
#calculating cluster distances and plotting
dist(cluster_means, method = "manhattan") -> distx1
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
minimum.spanning.tree(adjgraph) -> SPADEgraph
mypath2 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("Network_", ".png", sep = ""))
png(file = mypath2)
plot(SPADEgraph)
dev.off()
# Saving Phenotype data as bargraphs per cluster
for(i in 1:k){
mypath <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotype_","cluster_", i, ".png", sep = ""))
png(file = mypath)
barplot(as.matrix(log10(cluster_means[i,])),
cex.names = 0.7, log = "y",
main = paste("cluster",i, sep = " "))
dev.off()
}
}
SPADE(x,22)
SPADE <- function(x,k){
#initial clustering and binning
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
#cleaning data and assigning to data frame
big_data = do.call(cbind, datalist)
big_data = t(big_data)
clus_num <- c(1:k)
clus_names <- as.character(clus_num)
as.data.frame(big_data, row.names = c(clus_names)) -> cluster_means
# as above for phenotype data
for(i in 1:k){
mypath3 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotypes_","cluster_", i, ".png", sep = ""))
png(file = mypath3)
phedat = data.frame(x[c(cut_x == i),])
boxplot.matrix(as.matrix(log10(phedat)), cex.names = 0.7, log = "y",
main = paste("cluster",i, sep = " "))
dev.off()
}
#calculating cluster distances and plotting
dist(cluster_means, method = "manhattan") -> distx1
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
minimum.spanning.tree(adjgraph) -> SPADEgraph
mypath2 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("Network_", ".png", sep = ""))
png(file = mypath2)
plot(SPADEgraph)
dev.off()
# Saving Phenotype data as bargraphs per cluster
for(i in 1:k){
mypath <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotype_","cluster_", i, ".png", sep = ""))
png(file = mypath)
barplot(as.matrix(log10(cluster_means[i,])),
cex.names = 0.7, log = "y",
main = paste("cluster",i, sep = " "))
dev.off()
}
}
SPADE(x,22)
SPADE <- function(x,k){
#initial clustering and binning
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
#cleaning data and assigning to data frame
big_data = do.call(cbind, datalist)
big_data = t(big_data)
clus_num <- c(1:k)
clus_names <- as.character(clus_num)
as.data.frame(big_data, row.names = c(clus_names)) -> cluster_means
# as above for phenotype data
for(i in 1:k){
mypath3 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotypes_","cluster_", i, ".png", sep = ""))
png(file = mypath3)
phedat = data.frame(x[c(cut_x == i),])
boxplot.matrix(as.matrix(log10(phedat)), cex.names = 0.7,
main = paste("cluster",i, sep = " "))
dev.off()
}
#calculating cluster distances and plotting
dist(cluster_means, method = "manhattan") -> distx1
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
minimum.spanning.tree(adjgraph) -> SPADEgraph
mypath2 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("Network_", ".png", sep = ""))
png(file = mypath2)
plot(SPADEgraph)
dev.off()
# Saving Phenotype data as bargraphs per cluster
for(i in 1:k){
mypath <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotype_","cluster_", i, ".png", sep = ""))
png(file = mypath)
barplot(as.matrix(log10(cluster_means[i,])),
cex.names = 0.7, log = "y",
main = paste("cluster",i, sep = " "))
dev.off()
}
}
SPADE(x,22)
?boxplot.matrix
SPADE <- function(x,k){
#initial clustering and binning
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
#cleaning data and assigning to data frame
big_data = do.call(cbind, datalist)
big_data = t(big_data)
clus_num <- c(1:k)
clus_names <- as.character(clus_num)
as.data.frame(big_data, row.names = c(clus_names)) -> cluster_means
# as above for phenotype data
for(i in 1:k){
mypath3 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotypes_","cluster_", i, ".png", sep = ""))
png(file = mypath3)
phedat = data.frame(x[c(cut_x == i),])
boxplot.matrix(as.matrix(log10(phedat)), cex = 0.7, pch = 20,
main = paste("cluster",i, sep = " "))
dev.off()
}
#calculating cluster distances and plotting
dist(cluster_means, method = "manhattan") -> distx1
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
minimum.spanning.tree(adjgraph) -> SPADEgraph
mypath2 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("Network_", ".png", sep = ""))
png(file = mypath2)
plot(SPADEgraph)
dev.off()
# Saving Phenotype data as bargraphs per cluster
for(i in 1:k){
mypath <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotype_","cluster_", i, ".png", sep = ""))
png(file = mypath)
barplot(as.matrix(log10(cluster_means[i,])),
cex.names = 0.7, log = "y",
main = paste("cluster",i, sep = " "))
dev.off()
}
}
SPADE(x,22)
read.csv("Sample 1.csv") -> x
SPADE <- function(x,k){
#initial clustering and binning
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
#cleaning data and assigning to data frame
big_data = do.call(cbind, datalist)
big_data = t(big_data)
clus_num <- c(1:k)
clus_names <- as.character(clus_num)
as.data.frame(big_data, row.names = c(clus_names)) -> cluster_means
# as above for phenotype data
for(i in 1:k){
mypath3 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotypes_","cluster_", i, ".png", sep = ""))
png(file = mypath3)
phedat = data.frame(x[c(cut_x == i),])
boxplot.matrix(as.matrix(log10(phedat)), cex = 0.7, pch = 20,
main = paste("cluster",i, sep = " "))
dev.off()
}
#calculating cluster distances and plotting
dist(cluster_means, method = "manhattan") -> distx1
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
minimum.spanning.tree(adjgraph) -> SPADEgraph
mypath2 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("Network_", ".png", sep = ""))
png(file = mypath2)
plot(SPADEgraph)
dev.off()
# Saving Phenotype data as bargraphs per cluster
for(i in 1:k){
mypath <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotype_","cluster_", i, ".png", sep = ""))
png(file = mypath)
barplot(as.matrix(log10(cluster_means[i,])),
cex.names = 0.7, log = "y",
main = paste("cluster",i, sep = " "))
dev.off()
}
}
SPADE(x,15)
SPADE <- function(x,k){
#initial clustering and binning
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
#cleaning data and assigning to data frame
big_data = do.call(cbind, datalist)
big_data = t(big_data)
clus_num <- c(1:k)
clus_names <- as.character(clus_num)
as.data.frame(big_data, row.names = c(clus_names)) -> cluster_means
# as above for phenotype data
for(i in 1:k){
mypath3 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotypes_","cluster_", i, ".png", sep = ""))
png(file = mypath3)
phedat = data.frame(x[c(cut_x == i),])
boxplot.matrix(as.matrix(log10(phedat)), cex = 0.7, pch = 20,
main = paste("cluster",i, sep = " "))
dev.off()
}
#calculating cluster distances and plotting
dist(cluster_means, method = "manhattan") -> distx1
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
minimum.spanning.tree(adjgraph) -> SPADEgraph
mypath2 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("Network_", ".png", sep = ""))
png(file = mypath2)
plot(SPADEgraph)
dev.off()
# Saving Phenotype data as bargraphs per cluster
}
SPADE(x,15)
warnings()
SPADE <- function(x,k){
#initial clustering and binning
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
#cleaning data and assigning to data frame
big_data = do.call(cbind, datalist)
big_data = t(big_data)
clus_num <- c(1:k)
clus_names <- as.character(clus_num)
as.data.frame(big_data, row.names = c(clus_names)) -> cluster_means
# as above for phenotype data
for(i in 1:k){
mypath3 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotypes_","cluster_", i, ".png", sep = ""))
png(file = mypath3)
phedat = data.frame(x[c(cut_x == i),])
boxplot.matrix(as.matrix(phedat), cex = 0.7, pch = 20,
main = paste("cluster",i, sep = " "))
dev.off()
}
#calculating cluster distances and plotting
dist(cluster_means, method = "manhattan") -> distx1
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
minimum.spanning.tree(adjgraph) -> SPADEgraph
mypath2 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("Network_", ".png", sep = ""))
png(file = mypath2)
plot(SPADEgraph)
dev.off()
# Saving Phenotype data as bargraphs per cluster
}
SPADE(x,15)
read.csv("Sample 1.csv") -> x
apply(x,2,mean) -> xm
apply(x,2,sd) -> xs
scale(x,xm,xs) -> x
SPADE <- function(x,k){
#initial clustering and binning
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
#cleaning data and assigning to data frame
big_data = do.call(cbind, datalist)
big_data = t(big_data)
clus_num <- c(1:k)
clus_names <- as.character(clus_num)
as.data.frame(big_data, row.names = c(clus_names)) -> cluster_means
# as above for phenotype data
for(i in 1:k){
mypath3 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotypes_","cluster_", i, ".png", sep = ""))
png(file = mypath3)
phedat = data.frame(x[c(cut_x == i),])
boxplot.matrix(as.matrix(phedat), cex = 0.7, pch = 20,
main = paste("cluster",i, sep = " "))
dev.off()
}
#calculating cluster distances and plotting
dist(cluster_means, method = "manhattan") -> distx1
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
minimum.spanning.tree(adjgraph) -> SPADEgraph
mypath2 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("Network_", ".png", sep = ""))
png(file = mypath2)
plot(SPADEgraph)
dev.off()
# Saving Phenotype data as bargraphs per cluster
}
scale(x,xm,xs) -> x
SPADE(x,15)
read.csv("Sample 1.csv") -> x
apply(x,2,mean) -> xm
apply(x,2,sd) -> xs
scale(x,xm,xs) -> x
head(x)
class(x)
read.csv("Sample 1.csv") -> x
apply(x,2,mean) -> xm
apply(x,2,sd) -> xs
scale(x,xm,xs) -> xscaled
as.data.frame(xscaled) -> x
library(igraph)
SPADE <- function(x,k){
#initial clustering and binning
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
#cleaning data and assigning to data frame
big_data = do.call(cbind, datalist)
big_data = t(big_data)
clus_num <- c(1:k)
clus_names <- as.character(clus_num)
as.data.frame(big_data, row.names = c(clus_names)) -> cluster_means
# as above for phenotype data
for(i in 1:k){
mypath3 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("phenotypes_","cluster_", i, ".png", sep = ""))
png(file = mypath3)
phedat = data.frame(x[c(cut_x == i),])
boxplot.matrix(as.matrix(phedat), cex = 0.7, pch = 20,
main = paste("cluster",i, sep = " "))
dev.off()
}
#calculating cluster distances and plotting
dist(cluster_means, method = "manhattan") -> distx1
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
minimum.spanning.tree(adjgraph) -> SPADEgraph
mypath2 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE","Images",paste("Network_", ".png", sep = ""))
png(file = mypath2)
plot(SPADEgraph)
dev.off()
# Saving Phenotype data as bargraphs per cluster
}
SPADE(x,15)
?mkdir
?igraph
SPADE <- function(x,k){
#initial clustering and binning
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
#cleaning data and assigning to data frame
big_data = do.call(cbind, datalist)
big_data = t(big_data)
clus_num <- c(1:k)
clus_names <- as.character(clus_num)
as.data.frame(big_data, row.names = c(clus_names)) -> cluster_means
# Saving phenotypes as box and whisker graphs
for(i in 1:k){
mypath3 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE",
"Images",paste("phenotype_","cluster_", i, ".png", sep = ""))
png(file = mypath3)
phedat = data.frame(x[c(cut_x == i),])
boxplot.matrix(as.matrix(phedat), cex = 0.7, pch = 20,
main = paste("cluster",i, sep = " "))
dev.off()
}
#calculating cluster distances and plotting
dist(cluster_means, method = "manhattan") -> distx1
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
SPADEgraph <-minimum.spanning.tree(adjgraph) %>%
set_vertex_attr("color", value = "red")
mypath2 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE",
"Images",paste("Network_", ".png", sep = ""))
png(file = mypath2)
plot(SPADEgraph)
dev.off()
}
SPADE(x,15)
SPADE <- function(x,k){
#initial clustering and binning
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
#cleaning data and assigning to data frame
big_data = do.call(cbind, datalist)
big_data = t(big_data)
clus_num <- c(1:k)
clus_names <- as.character(clus_num)
as.data.frame(big_data, row.names = c(clus_names)) -> cluster_means
# Saving phenotypes as box and whisker graphs
for(i in 1:k){
mypath3 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE",
"Images",paste("phenotype_","cluster_", i, ".png", sep = ""))
png(file = mypath3)
phedat = data.frame(x[c(cut_x == i),])
boxplot.matrix(as.matrix(phedat), cex = 0.7, pch = 20,
main = paste("cluster",i, sep = " "))
dev.off()
}
#calculating cluster distances and plotting
dist(cluster_means, method = "manhattan") -> distx1
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
SPADEgraph <-minimum.spanning.tree(adjgraph) %>%
set_vertex_attr("color", value = "firebrick")
mypath2 <- file.path("~/Desktop","Lab R work","PUT FILES IN HERE",
"Images",paste("Network_", ".png", sep = ""))
png(file = mypath2)
plot(SPADEgraph)
dev.off()
}
SPADE(x,15)
