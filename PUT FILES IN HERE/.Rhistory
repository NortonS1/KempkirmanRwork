minimum.spanning.tree(full_graph)
distances <- dist(x, method = "manhattan")
hclust(distances)
hclust(distances) ->hclust
cutree(hclust, k = 100)
cutree(hclust, k = 100) -> ctx
ctx$centers
hclust$centers
hclust$center
hclust
plot(hclust)
head(hclust)
hclust$height
dist(hclust$height, method = "manhattan") -> adjacency
graph.adjacency(as.matrix(adjacency),mode="undirected",weighted=TRUE)
graph.adjacency(as.matrix(adjacency),mode="undirected",weighted=TRUE) -> full_graph
mst_graph  <- minimum.spanning.tree(full_graph)
tkplot(mst_graph)
tkplot(mst_graph)
x
head(x)
dist(x)
dist(x) -> xdist
head(xdist)
hclust(distx, method = "euclidean")
hclust(distx)
hclust(distx) -> y
plot(y)
cutree(y, k=50)
cutree(y, k=10)
?cutree
head(xdist)
xdist
graph.adjacency(as.matrix(xdist),mode="undirected",weighted=TRUE) -> full_graph
minimum.spanning.tree(full_graph)
minimum.spanning.tree(full_graph) -> mst_graph
tkplot(mst_graph)
read.csv("Sample 1.csv") -> x
dist(x, method = "Manhattan") -> distx
?dist
dist(x, method = "manhattan") -> distx
graph.adjacency(as.matrix(distx),mode="undirected",weighted=TRUE) -> adjgraph
minimum.spanning.tree(adjgraph) -> SPADEgraph
tkplot(SPADEgraph)
hclust(x)
hclust(distx)
hclust(distx) -> clus_x
cutree(clus_x, k = 15) ->cut_x
cut_x
?list
as.list(cut_x) -> cut_x
cut_x
read.csv("Sample 1.csv") -> x
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = 15) ->cut_x
x[c(cut_x == 1),]
colMeans(x[c(cut_x == 1),])
class(colMeans(x[c(cut_x == 1),]))
read.csv("Sample 1.csv") -> x
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
row = row+1
rbind(colMeans(x[c(cut_x == row),])) -> clusters
}
SPADE(x,10)
clusters
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
row = row+1
rbind(colMeans(x[c(cut_x == row),])) -> FUNKY
return(FUNKY)
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
row = row+1
rbind(row, colMeans(x[c(cut_x == row),])) -> FUNKY
return(FUNKY)
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
row = row+1
print(row, colMeans(x[c(cut_x == row),]))
}
#f
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
row = row+1
print(colMeans(x[c(cut_x == row),]))
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
row = row+1
colMeans(x[c(cut_x == row),]) -> y
print(y)
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 1
while(row<k)
colMeans(x[c(cut_x == row),]) -> y
print(y)
row = row+1
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 1
while(row<k)
colMeans(x[c(cut_x == row),]) -> y
print(y)
row = row+1
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
{row = row+1
colMeans(x[c(cut_x == row),]) -> y
print(y)}
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
{row = row+1
colMeans(x[c(cut_x == row),]) -> y
rbind(row,y)}
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
{row = row+1
colMeans(x[c(cut_x == row),]) -> y
rbind(row,y) -> means}
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
{row = row+1
colMeans(x[c(cut_x == row),]) -> y}
}
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
{row = row+1
colMeans(x[c(cut_x == row),]) -> y
print(y)}
}
SPADE(x,10)
dim(y)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
{row = row+1
as.data.frame(colMeans(x[c(cut_x == row),])) -> y
print(y)
}
}
SPADE(x,10)
?as.data.frame
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
{row = row+1
rbind(as.data.frame(colMeans(x[c(cut_x == row),]))) -> y
print(y)
}
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
{ d = NULL
row = row+1
d = rbind(data.frame(colMeans(x[c(cut_x == row),])))
}
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
while(row<k)
{ d = NULL
row = row+1
d = rbind(data.frame(colMeans(x[c(cut_x == row),])))
return(d)
}
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
d = NULL
while(row<k)
{
row = row+1
d = rbind(data.frame(colMeans(x[c(cut_x == row),])))
return(d)
}
}
SPADE(x,10)
?data.frame
?runif
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
d = 0
while(row<k)
{row = row+1
rbind(data.frame(d, colMeans(x[c(cut_x == row),]))) -> d
return(d)
}
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
d = 0
while(row<k)
{row = row+1
rbind(data.frame(row, colMeans(x[c(cut_x == row),]))) -> d
return(d)
}
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
d = 0
while(row<k)
{row = row+1
rbind(data.frame(row, colMeans(x[c(cut_x == row),]))) -> d
}
return(d)
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
row = 0
d = NULL
while(row<k)
{row = row+1
rbind(data.frame(d, colMeans(x[c(cut_x == row),]))) -> d
}
return(d)
}
SPADE(x,10)
rep(0,10)
d = data.frame( x=rep(0, 10))
d
d = data.frame( x=rep(0, 10), y=rep(0,10), z=rep(0,10))
d
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
for(i in 1:k)
{ rbind(data.frame(i,colMeans(x[c(cut_x == i),]))) -> d}
return(d)
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
d = NULL
for(i in 1:k)
{ d = rbind(data.frame(d,colMeans(x[c(cut_x == i),])))}
return(d)
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
d = NULL
for(i in 1:k)
{ d = rbind(matrix(d,colMeans(x[c(cut_x == i),])))}
return(d)
}
SPADE(x,10)
?data.frame
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
d = NULL
for(i in 1:k)
{ d = rbind(data.frame(d,colMeans(x[c(cut_x == i),])), check.rows = FALSE)}
return(d)
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
d = data.frame( x=rep(0, 10))
for(i in 1:k){
d[i,] = c(colMeans(x[c(cut_x == i),]))
}
return(d)
}
SPADE(x,10)
d = data.frame( x=rep(0, 10))
d
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
d = data.frame( x=rep(0, 10))
for(i in 1:k){
c(colMeans(x[c(cut_x == i),]))
}
}
SPADE(x,10)
i
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
for(i in 1:k){
c(colMeans(x[c(cut_x == i),]))
}
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
for(i in 1:k){
c(colMeans(x[c(cut_x == i),])) -> d
}
return(d)
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
for(i in 1:k){
data.frame(i,colMeans(x[c(cut_x == i),])) -> d
}
return(d)
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
for(i in 1:k){
data.frame(i,colMeans(x[c(cut_x == i),])) -> d
return(d)
}
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(i,colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
big_data = do.call(rbind, datalist)
return(big_data)
}
SPADE(x,10)
class(big_data)
class("big_data")
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(i,colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
big_data = do.call(rbind, datalist)
dist(big_data, method = "manhattan") -> distx1
#final graphing
graph.adjacency(as.matrix(distx1),mode="undirected",weighted=TRUE) -> adjgraph
minimum.spanning.tree(adjgraph) -> SPADEgraph
tkplot(SPADEgraph)
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(i,colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
big_data = do.call(rbind, datalist)
print(big_data)
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(i,colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
big_data = do.call(rbind, datalist)
print(dim(big_data))
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(i,colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
big_data = do.call(cbind, datalist)
print(dim(big_data))
}
SPADE(x,10)
SPADE <- function(x,k){
dist(x, method = "manhattan") -> distx
hclust(distx) -> clus_x
cutree(clus_x, k = k) ->cut_x
datalist = list()
for(i in 1:k){
dat = data.frame(i,colMeans(x[c(cut_x == i),]))
datalist[[i]] <- dat
}
big_data = do.call(cbind, datalist)
print(dim(big_data))
return(big_data)
}
SPADE(x,10)
